package com.spendwell.service;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;

import org.json.JSONArray;

import com.android.volley.AuthFailureError;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonArrayRequest;
import com.android.volley.toolbox.Volley;
import com.example.budgetwell.R;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.spendwell.activity.NotificationListActivity;
import com.spendwell.entity.NotificaitonItem;

import android.app.Notification;
import android.app.Notification.Builder;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Binder;
import android.os.IBinder;

public class NotificationServeice extends Service {
	private Context mContext;
	private RequestQueue mQueue;
	private SharedService ss;
	private List<NotificaitonItem> list;
	private NotificationManager notificationManager;
	private static final int NOTIFICATION_ID = 123;
	private Builder builder = null;
	private Notification notify = null;
	private String url = "http://spendwell.herokuapp.com/api/notifications/";
	private MyBinder binder = new MyBinder();
	public Timer loadTimer;
	TimerTask loadTask = new TimerTask() {

		@Override
		public void run() {
			loadNotications();
		}
	};

	@Override
	public void onCreate() {
		super.onCreate();
		mContext = getApplicationContext();
		mQueue = Volley.newRequestQueue(mContext);
		ss = new SharedService(mContext);
		list = new ArrayList<NotificaitonItem>();
		notificationManager = (NotificationManager) mContext
				.getSystemService(Context.NOTIFICATION_SERVICE);
	}

	@Override
	public IBinder onBind(Intent intent) {
		return binder;
	}

	public class MyBinder extends Binder {
		public void startLoading() {
			if (loadTimer == null) {
				loadTimer = new Timer();
				loadTimer.schedule(loadTask, 1000, 10 * 1000);
			}
		}

		public void stopLoading() {
			loadTimer.cancel();
		}
	}

	public void loadNotications() {

		JsonArrayRequest request = new JsonArrayRequest(url,
				new Response.Listener<JSONArray>() {

					@Override
					public void onResponse(JSONArray response) {
						String json = response.toString();
						Gson gson = new Gson();
						list = gson.fromJson(json,
								new TypeToken<List<NotificaitonItem>>() {
								}.getType());
						selectItem(list);
					}
				}, new Response.ErrorListener() {

					@Override
					public void onErrorResponse(VolleyError error) {

					}
				}) {
			@Override
			public Map<String, String> getHeaders() throws AuthFailureError {
				Map<String, String> header = new HashMap<String, String>();
				header.put("Authorization", "Token " + ss.getRequestToken());
				return header;
			}
		};
		mQueue.add(request);
	}

	public void selectItem(List<NotificaitonItem> list) {
		long lastUpdatetime = ss.getLastUpdateTime();
		List<NotificaitonItem> notes = ss.getAllNotifications();

		List<NotificaitonItem> update = new ArrayList<NotificaitonItem>();

		if (lastUpdatetime == 0) {
			update = list;
			notes = list;
		} else {
			Date date = new Date(lastUpdatetime);
			for (NotificaitonItem item : list) {
				if (item.getDate().after(date)) {
					notes.add(item);
					update.add(item);
				}
			}
		}

		if (update.size() > 0)
			sendNotification(update);

		ss.setNotificationList(notes);
		ss.setLastUpdateTime(System.currentTimeMillis());
	}

	public void sendNotification(List<NotificaitonItem> update) {
		Intent it = new Intent(mContext, NotificationListActivity.class);
		PendingIntent pit = PendingIntent.getActivity(mContext, 0, it,
				Intent.FLAG_ACTIVITY_NEW_TASK);
		builder = new Notification.Builder(mContext);
		builder.setAutoCancel(true);
		builder.setTicker("You have new Notification");
		builder.setSmallIcon(R.drawable.small_icon);
		builder.setContentTitle("New Notificaition");
		builder.setContentText("You have " + update.size()
				+ " notfications not read!");
		builder.setContentIntent(pit);
		notify = builder.build();
		notificationManager.notify(NOTIFICATION_ID, notify);

	}

}
