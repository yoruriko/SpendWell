package com.spendwell.fragment;

import java.util.HashMap;
import java.util.Map;

import org.json.JSONArray;

import com.android.volley.AuthFailureError;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonArrayRequest;
import com.android.volley.toolbox.Volley;
import com.example.budgetwell.R;
import com.spendwell.service.SharedService;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class IncomingFragment extends Fragment {
	private ListView listView;
	private TextView text;
	private SharedService ss;
	private RequestQueue mQueue;
	private String url = "http://spendwell.herokuapp.com/api/incoming/";

	private Handler mHandler = new Handler() {

		@Override
		public void handleMessage(Message msg) {
			if (msg.what == 0) {
				text.append(msg.obj.toString());
			}
		}

	};

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.incoming_fragment_layout,
				container, false);
		text = (TextView) view.findViewById(R.id.text);
		ss = new SharedService(getActivity());
		mQueue = Volley.newRequestQueue(getActivity());
		loadIncoming();
		// listView=(ListView)view.findViewById(R.id.list);

		return view;
	}

	public void loadIncoming() {
		JsonArrayRequest request = new JsonArrayRequest(url,
				new Response.Listener<JSONArray>() {

					@Override
					public void onResponse(JSONArray response) {
						mHandler.obtainMessage(0, response.toString())
								.sendToTarget();
					}
				}, new Response.ErrorListener() {

					@Override
					public void onErrorResponse(VolleyError error) {
						Toast.makeText(getActivity(), "Loading incoming error",
								Toast.LENGTH_SHORT).show();
					}
				}) {
			@Override
			public Map<String, String> getHeaders() throws AuthFailureError {
				Map<String, String> header = new HashMap<String, String>();
				header.put("Authorization", "Token " + ss.getRequestToken());
				return header;
			}
		};
		mQueue.add(request);
	}
}
