package com.spendwell.activity;

import com.android.volley.RequestQueue;
import com.example.budgetwell.R;
import com.spendwell.entity.Account;
import com.spendwell.service.SharedService;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.view.Window;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Toast;

public class LoginActivity extends Activity {
	private Button login_btn;// Login Button
	private EditText user_et, pwd_et;// Username editText, Password editText
	private CheckBox rmb_cb;// Remember User Name check box
	private SharedService ss;

	private String user_name, user_pwd;
	private RequestQueue mQueue;

	private String ip;
	private String login_path;
	private String login_end;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.login_main);
		ss = new SharedService(this);
		login_btn = (Button) this.findViewById(R.id.login_btn);
		user_et = (EditText) this.findViewById(R.id.user_name_et);
		pwd_et = (EditText) this.findViewById(R.id.pwd_et);
		rmb_cb = (CheckBox) this.findViewById(R.id.rmb_user_name_cb);

		// ip = getResources().getString(R.string.server_ip);
		// login_path = "http://" + ip + "/api/person/";
		// login_end = "/?format=json";
		//
		// mQueue = Volley.newRequestQueue(LoginActivity.this);
		//
		loadLastLogin();
		initListener();

	}

	public void loadLastLogin() {
		boolean isSaved = ss.getIsNameSave();
		if (isSaved) {
			user_et.setText(ss.readUserName());
		}
		rmb_cb.setChecked(isSaved);
	}

	public void initListener() {

		login_btn.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				if (TextUtils.isEmpty(user_et.getText())) {
					Toast.makeText(getApplicationContext(),
							R.string.name_empty_message, Toast.LENGTH_SHORT)
							.show();
				} else if (TextUtils.isEmpty(pwd_et.getText())) {
					Toast.makeText(getApplicationContext(),
							R.string.pwd_emptu_mesage, Toast.LENGTH_SHORT)
							.show();
				} else {
					user_name = user_et.getText().toString().trim();
					user_pwd = pwd_et.getText().toString().trim();
					Account acc = new Account("Admin Account", "A123456",
							"65-43-21", "a1d2m3i4n5", 1999, 2000);

					if (!user_name.equals("admin") || !user_pwd.equals("123")) {
						Toast.makeText(getApplicationContext(),
								"Incorrect username or password",
								Toast.LENGTH_SHORT).show();
					} else {
						ss.save(user_name, user_pwd, rmb_cb.isChecked());
						if (ss.readAccount() == null) {
							ss.saveAccount(acc);
						}
						Intent intent = new Intent(getApplicationContext(),
								MainActivity.class);
						startActivity(intent);
						LoginActivity.this.finish();
					}

					// String url = login_path + "?username=" + user_name + "&"
					// + "?password=" + user_pwd + login_end;
					//
					// Toast.makeText(getApplicationContext(), url,
					// Toast.LENGTH_LONG).show();
					//
					// JsonObjectRequest login_request = new JsonObjectRequest(
					// url, null, new Response.Listener<JSONObject>() {
					//
					// @Override
					// public void onResponse(JSONObject response) {
					// String result = response.toString();
					// Toast.makeText(getApplicationContext(),
					// result, Toast.LENGTH_LONG).show();
					//
					// }
					// }, new ErrorListener() {
					//
					// @Override
					// public void onErrorResponse(VolleyError error) {
					// Toast.makeText(getApplicationContext(),
					// "error", Toast.LENGTH_SHORT).show();
					//
					// }
					// });
					// mQueue.add(login_request);
				}
			}
		});
	}

	@Override
	protected void onResume() {
		super.onResume();

	}

	@Override
	protected void onPause() {
		super.onPause();
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
	}
}
