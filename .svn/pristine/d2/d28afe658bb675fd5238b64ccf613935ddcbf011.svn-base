package com.spendwell.fragment;

import java.util.List;

import com.example.budgetwell.R;
import com.google.gson.Gson;
import com.spendwell.activity.AddReminderActivity;
import com.spendwell.adapter.ReminderItemAdapter;
import com.spendwell.entity.ReminderItem;
import com.spendwell.utils.ReminderSQLServiceImpl;

import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ListView;

public class ReminderFragment extends Fragment {
	private ListView listView;
	private List<ReminderItem> list;
	private ImageButton add_btn;
	private ReminderSQLServiceImpl impl;
	private ReminderItemAdapter adapter;

	private ReminderItem delete_item;

	private static final int REQUEST_CODE = 100;
	private static final int RESULT_CODE = 200;

	private static final int REMOVE_REMINDER_ITEM = 1;
	private static final int INSERT_REMINDER_ITEM = 2;
	private static final int CONFRIM_DELETE_ITEM = 3;
	public Handler mHandler = new Handler() {

		@Override
		public void handleMessage(Message msg) {
			if (msg.what == REMOVE_REMINDER_ITEM) {
				ReminderItem item = (ReminderItem) msg.obj;
				delete_item = item;
				showAlerDialog();
			}

			if (msg.what == INSERT_REMINDER_ITEM) {
				ReminderItem item = (ReminderItem) msg.obj;
				impl.insertReminder(item);
				list.add(item);
				adapter.notifyDataSetChanged();
			}

			if (msg.what == CONFRIM_DELETE_ITEM) {
				impl.deleteByItem(delete_item);

				list.remove(delete_item);

				adapter.notifyDataSetChanged();
			}
		}

	};

	@Override
	public View onCreateView(LayoutInflater inflater,
			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.reminder_list_layout, null);
		listView = (ListView) view.findViewById(R.id.reminder_list_view);
		add_btn = (ImageButton) view.findViewById(R.id.add_btn);
		impl = new ReminderSQLServiceImpl(getActivity());

		list = impl.getAll();

		adapter = new ReminderItemAdapter(getActivity(), list, mHandler);
		listView.setAdapter(adapter);

		add_btn.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent it = new Intent(getActivity(), AddReminderActivity.class);
				startActivityForResult(it, REQUEST_CODE);
			}
		});
		return view;
	}

	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		if (resultCode == RESULT_CODE) {
			String json = data.getExtras().getString("item");
			Gson gson = new Gson();
			ReminderItem item = gson.fromJson(json, ReminderItem.class);
			mHandler.obtainMessage(2, item).sendToTarget();
		}
		super.onActivityResult(requestCode, resultCode, data);
	}

	public void showAlerDialog() {
		AlertDialog.Builder builder = new Builder(getActivity());
		builder.setMessage("Are you sure to delete this Reminder?");
		builder.setPositiveButton("Yes", new DialogInterface.OnClickListener() {

			@Override
			public void onClick(DialogInterface dialog, int which) {
				mHandler.sendEmptyMessage(CONFRIM_DELETE_ITEM);
			}
		});
		builder.setNegativeButton("Cancel",
				new DialogInterface.OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {

					}
				});
		builder.create().show();

	}

}
