package com.spendwell.activity;

import com.example.budgetwell.R;
import com.google.gson.Gson;
import com.spendwell.entity.ReminderItem;
import com.spendwell.utils.ReminderSQLServiceImpl;

import android.app.Activity;
import android.app.AlarmManager;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

public class AddReminderActivity extends Activity {
	public static final String TAG = AddReminderActivity.class.getSimpleName();
	private Spinner type, payType;
	private EditText target, amount, description;
	private DatePicker date;
	private CheckBox alarm;
	private ImageButton save;
	private ReminderSQLServiceImpl impl;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.add_reminder_layout);
		type = (Spinner) findViewById(R.id.type_spinner);
		payType = (Spinner) findViewById(R.id.pay_type_spinner);
		target = (EditText) findViewById(R.id.target_edt);
		amount = (EditText) findViewById(R.id.amount_edt);
		date = (DatePicker) findViewById(R.id.date_picker);
		date.setMinDate(System.currentTimeMillis() - 1000);
		description = (EditText) findViewById(R.id.description_edt);
		alarm = (CheckBox) findViewById(R.id.alram_cb);
		save = (ImageButton) findViewById(R.id.save_btn);
		impl = new ReminderSQLServiceImpl(this);

		initListener();
		setActionbar();
	}

	public void initListener() {
		save.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				if (TextUtils.isEmpty(target.getText())) {
					Toast.makeText(getApplicationContext(),
							"please fill the target name", Toast.LENGTH_SHORT)
							.show();
					return;
				}
				if (TextUtils.isEmpty(amount.getText())
						|| Double.parseDouble(amount.getText().toString()) <= 0) {
					Toast.makeText(getApplicationContext(),
							"Amount must be filled and greater than 0",
							Toast.LENGTH_SHORT).show();
					return;
				}

				// create new item and fill its fileds
				ReminderItem item = new ReminderItem();
				item.setType(type.getSelectedItemPosition());
				item.setPayType(payType.getSelectedItemPosition());
				item.setAmount(Double.parseDouble(amount.getText().toString()
						.trim()));
				item.setTargetName(target.getEditableText().toString().trim());
				item.setDescription(description.getText().toString().trim());
				item.setAlarm(alarm.isChecked());
				item.setPaid(false);
				String mounth;
				if (date.getMonth() < 9) {
					mounth = "0" + (date.getMonth() + 1);
				} else {
					mounth = "" + (date.getMonth() + 1);
				}
				String dateString = date.getYear() + "-" + mounth + "-"
						+ date.getDayOfMonth();
				item.setDate(dateString);

				Intent it = new Intent();
				Gson gson = new Gson();
				String json = gson.toJson(item);
				it.putExtra("item", json);
				setResult(200, it);

//				impl.insertReminder(item);
				Log.i(TAG, "Reminder item " + dateString + " is saved");
				finish();
			}
		});
	}

	private void setAlarm() {
		AlarmManager am = (AlarmManager) getSystemService(ALARM_SERVICE);

	}

	public void setActionbar() {
		TextView text = (TextView) this.findViewById(R.id.actionbar_text);
		text.setText("New Reminder");

		Button back = (Button) this.findViewById(R.id.actionbar_btn);
		back.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				onBackPressed();
			}
		});
	}

}
