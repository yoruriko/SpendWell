package com.spendwell.activity;

import java.util.HashMap;
import java.util.Map;

import org.json.JSONException;
import org.json.JSONObject;

import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonObjectRequest;
import com.android.volley.toolbox.Volley;
import com.example.budgetwell.R;
import com.spendwell.entity.Account;
import com.spendwell.service.SharedService;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.view.Window;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Toast;

public class LoginActivity extends Activity {
	private Button login_btn;// Login Button
	private EditText user_et, pwd_et;// Username editText, Password editText
	private CheckBox rmb_cb;// Remember User Name check box
	private SharedService ss;

	private String user_name, user_pwd;
	private RequestQueue mQueue;

	private String login_url = "https://calm-hamlet-8140.herokuapp.com/api/token/?format=json";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.login_main);
		ss = new SharedService(this);
		login_btn = (Button) this.findViewById(R.id.login_btn);
		user_et = (EditText) this.findViewById(R.id.user_name_et);
		pwd_et = (EditText) this.findViewById(R.id.pwd_et);
		rmb_cb = (CheckBox) this.findViewById(R.id.rmb_user_name_cb);

		mQueue = Volley.newRequestQueue(LoginActivity.this);

		loadLastLogin();
		initListener();

	}

	public void loadLastLogin() {
		boolean isSaved = ss.getIsNameSave();
		if (isSaved) {
			user_et.setText(ss.readUserName());
		}
		rmb_cb.setChecked(isSaved);
	}

	public void initListener() {

		login_btn.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				if (TextUtils.isEmpty(user_et.getText())) {

					Toast.makeText(getApplicationContext(),
							R.string.name_empty_message, Toast.LENGTH_SHORT)
							.show();

				} else if (TextUtils.isEmpty(pwd_et.getText())) {

					Toast.makeText(getApplicationContext(),
							R.string.pwd_emptu_mesage, Toast.LENGTH_SHORT)
							.show();

				} else {

					user_name = user_et.getText().toString().trim();
					user_pwd = pwd_et.getText().toString().trim();

					Map<String, String> params = new HashMap<String, String>();
					params.put("username", user_name);
					params.put("password", user_pwd);

					JSONObject json = new JSONObject(params);
					athentication(json);
				}
			}
		});
	}

	private void athentication(JSONObject json) {

		JsonObjectRequest request = new JsonObjectRequest(login_url, json,
				new Response.Listener<JSONObject>() {

					@Override
					public void onResponse(JSONObject response) {
						try {
							String req_token = response.getString("token");

							String username = user_et.getText().toString();
							boolean isNameSave = rmb_cb.isChecked();
							ss.save(username, req_token, isNameSave);

							Intent it = new Intent(getApplicationContext(),
									MainActivity.class);
							startActivity(it);
							finish();

						} catch (JSONException error) {
							error.printStackTrace();
						}
					}
				}, new Response.ErrorListener() {

					@Override
					public void onErrorResponse(VolleyError error) {
						Toast.makeText(getApplicationContext(),
								R.string.authentication_fail_message,
								Toast.LENGTH_SHORT).show();
					}
				});

		mQueue.add(request);
	}

	@Override
	protected void onResume() {
		super.onResume();

	}

	@Override
	protected void onPause() {
		super.onPause();
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
	}
}
