package com.spendwell.activity;

import java.util.HashMap;
import java.util.Map;

import org.json.JSONObject;

import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonObjectRequest;
import com.android.volley.toolbox.Volley;
import com.anupcowkur.wheelmenu.WheelMenu;
import com.example.budgetwell.R;
import com.spendwell.service.SharedService;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class TestSafeDialActivity extends Activity {
	private WheelMenu wheelMenu;
	private TextView selectedPositionText, txt_1, txt_2, txt_3, txt_4, mFocus;
	private Button send;
	private int foucs = 0;
	private long lastUpdateTime;
	private static final int TIME_INTEVAL = 2000;
	private RequestQueue mQueue;
	private SharedService ss;
	private String url;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.safe_dial_layout);
		wheelMenu = (WheelMenu) findViewById(R.id.wheelMenu);
		txt_1 = (TextView) findViewById(R.id.txt_1);
		txt_2 = (TextView) findViewById(R.id.txt_2);
		txt_3 = (TextView) findViewById(R.id.txt_3);
		txt_4 = (TextView) findViewById(R.id.txt_4);
		mQueue = Volley.newRequestQueue(this);
		ss = new SharedService(getApplicationContext());
		wheelMenu.setDivCount(10);
		wheelMenu.setWheelImage(R.drawable.wheel);
		send = (Button) findViewById(R.id.send_btn);

		selectedPositionText = (TextView) findViewById(R.id.selected_position_text);
		selectedPositionText.setText("selected: "
				+ (wheelMenu.getSelectedPosition()));

		wheelMenu.setWheelChangeListener(new WheelMenu.WheelChangeListener() {
			@Override
			public void onSelectionChange(int selectedPosition) {
				long currentTime = System.currentTimeMillis();
				long timeInterval = currentTime - lastUpdateTime;
				if (timeInterval > TIME_INTEVAL) {
					changeFoucus();
				}
				selectedPositionText.setText("selected: " + (selectedPosition));
				mFocus.setText("" + selectedPosition);
				lastUpdateTime = currentTime;
			}
		});

		initListener();
	}

	public void changeFoucus() {
		if (foucs == 0) {
			mFocus = txt_1;
		} else if (foucs == 1) {
			mFocus = txt_2;
		} else if (foucs == 2) {
			mFocus = txt_3;
		} else if (foucs == 3) {
			mFocus = txt_4;
		}

		foucs++;
	}

	public void initListener() {
		send.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				String username = ss.readUserName();
				String safe_dial_key = txt_1.getText().toString()
						+ txt_2.getText().toString()
						+ txt_3.getText().toString()
						+ txt_4.getText().toString();
				Map<String, String> params = new HashMap<String, String>();
				params.put("username", username);
				params.put("", "");
				
				JsonObjectRequest request = new JsonObjectRequest(url, null,
						new Response.Listener<JSONObject>() {

							@Override
							public void onResponse(JSONObject response) {

							}
						}, new Response.ErrorListener() {

							@Override
							public void onErrorResponse(VolleyError error) {

							}
						});

				mQueue.add(request);
			}
		});
	}
}
